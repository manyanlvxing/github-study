{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\main.js"],"names":["NodePoolMgr","require","cc","Class","extends","Component","properties","content","Node","Prefab_rank","Prefab","ScrollView","spacingY","width","height","start","self","wx","onMessage","data","type","getFriendCloudStorage","keyList","success","res","console","log","updateRankList","fail","i","children","length","putNode","removeAllChildren","sortByLevel","scrollToTop","setContentSize","size","node","getNode","instantiate","parent","script","getComponent","loadInfo","sort","a","b","parseInt","KVDataList","value"],"mappings":";;;;;;AAAA,IAAIA,cAAcC,QAAQ,aAAR,CAAlB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,iBAASL,GAAGM,IADJ;AAERC,qBAAaP,GAAGQ,MAFR;AAGRC,oBAAYT,GAAGS,UAHP;AAIRC,kBAAU,CAJF;AAKRC,eAAO,GALC;AAMRC,gBAAQ;AANA,KAHP;;AAYLC,SAZK,mBAYG;AAAA;;AACJ,YAAIC,OAAO,IAAX;AACAC,WAAGC,SAAH,CAAa,gBAAQ;AACjB,oBAAQC,KAAKC,IAAb;AACI,qBAAK,UAAL;AACIH,uBAAGI,qBAAH,CAAyB;AACrBC,iCAAS,CAAC,OAAD,CADY;AAErBC,iCAAS,iBAACC,GAAD,EAAS;AACdC,oCAAQC,GAAR,CAAY,YAAZ,EAA0BF,IAAIL,IAA9B;AACAH,iCAAKW,cAAL,CAAoBH,IAAIL,IAAxB;AACH,yBALoB;AAMrBS,8BAAM,gBAAM;AACRH,oCAAQC,GAAR,CAAY,UAAZ;AACH;AARoB,qBAAzB;AAUA;AACJ,qBAAK,WAAL;AACI,yBAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAI,MAAKtB,OAAL,CAAauB,QAAb,CAAsBC,MAA1C,EAAkDF,GAAlD,EAAuD;AACnD7B,oCAAYgC,OAAZ,CAAoB,MAAKzB,OAAL,CAAauB,QAAb,CAAsBD,CAAtB,CAApB,EAA8C,MAA9C;AACH;AACD,0BAAKtB,OAAL,CAAa0B,iBAAb;AACA;AACJ;AACI;AApBR;AAsBH,SAvBD;AAyBH,KAvCI;AAwCLN,kBAxCK,0BAwCUR,IAxCV,EAwCgB;AACjB,aAAKe,WAAL,CAAiBf,IAAjB;AACA,aAAKZ,OAAL,CAAa0B,iBAAb;AACA,aAAKtB,UAAL,CAAgBwB,WAAhB;AACA,YAAIhB,KAAKY,MAAL,GAAc,CAAlB,EACI,KAAKxB,OAAL,CAAa6B,cAAb,CAA4BlC,GAAGmC,IAAH,CAAQ,KAAKxB,KAAb,EAAoB,KAAKC,MAAL,GAAcK,KAAKY,MAAnB,GAA4B,KAAKnB,QAAL,IAAiBO,KAAKY,MAAL,GAAc,CAA/B,CAAhD,CAA5B;;AAEJ,aAAK,IAAIF,IAAI,CAAb,EAAgBA,IAAIV,KAAKY,MAAzB,EAAiCF,GAAjC,EAAsC;AAClC,gBAAIS,OAAOtC,YAAYuC,OAAZ,CAAoB,MAApB,CAAX;AACA,gBAAI,CAACD,IAAL,EACIA,OAAOpC,GAAGsC,WAAH,CAAe,KAAK/B,WAApB,CAAP;AACJ6B,iBAAKG,MAAL,GAAc,KAAKlC,OAAnB;;AAEA,gBAAImC,SAASJ,KAAKK,YAAL,CAAkB,UAAlB,CAAb;;AAEAD,mBAAOE,QAAP,CAAgBzB,KAAKU,CAAL,CAAhB,EAAyBA,CAAzB;AACH;AAEJ,KA1DI;AA2DLK,eA3DK,uBA2DOf,IA3DP,EA2Da;AACdA,aAAK0B,IAAL,CAAU,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACtB,mBAAOC,SAASD,EAAEE,UAAF,CAAa,CAAb,EAAgBC,KAAzB,IAAkCF,SAASF,EAAEG,UAAF,CAAa,CAAb,EAAgBC,KAAzB,CAAzC;AACH,SAFD;AAGH;AA/DI,CAAT","file":"main.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["var NodePoolMgr = require(\"NodePoolMgr\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        content: cc.Node,\n        Prefab_rank: cc.Prefab,\n        ScrollView: cc.ScrollView,\n        spacingY: 5,\n        width: 530,\n        height: 120\n    },\n\n    start() {\n        let self = this;\n        wx.onMessage(data => {\n            switch (data.type) {\n                case \"showRank\":\n                    wx.getFriendCloudStorage({\n                        keyList: ['level'],\n                        success: (res) => {\n                            console.log(\"获取好友信息成功::\", res.data);\n                            self.updateRankList(res.data);\n                        },\n                        fail: () => {\n                            console.log(\"获取好友信息失败\");\n                        }\n                    })\n                    break;\n                case \"closeRank\":\n                    for (let i = 0; i < this.content.children.length; i++) {\n                        NodePoolMgr.putNode(this.content.children[i], \"rank\");\n                    }\n                    this.content.removeAllChildren();\n                    break;\n                default:\n                    break;\n            }\n        });\n\n    },\n    updateRankList(data) {\n        this.sortByLevel(data);\n        this.content.removeAllChildren();\n        this.ScrollView.scrollToTop();\n        if (data.length > 5)\n            this.content.setContentSize(cc.size(this.width, this.height * data.length + this.spacingY * (data.length - 1)));\n\n        for (let i = 0; i < data.length; i++) {\n            var node = NodePoolMgr.getNode(\"rank\");\n            if (!node)\n                node = cc.instantiate(this.Prefab_rank);\n            node.parent = this.content;\n\n            var script = node.getComponent(\"rankComp\");\n\n            script.loadInfo(data[i], i);\n        }\n\n    },\n    sortByLevel(data) {\n        data.sort(function (a, b) {\n            return parseInt(b.KVDataList[0].value) - parseInt(a.KVDataList[0].value);\n        })\n    },\n});"]}